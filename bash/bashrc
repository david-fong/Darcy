
# exit if not running interactively:
[[ "$-" =~ "i" ]] || return




# Not related, but written here in case I forget what I did:
# Computer\HKEY_CURRENT_USER\Software\Policies\Microsoft\Windows\Explorer\NoUninstallFromStart
# right-click recycle bin and check the "prompt before moving to recycle-bin" box
# random note: can open control panel with windows + pause/break
# don't turn on "lower screen brightness in battery saving mode".
#   seems to lock screen brightness until next computer restart.
# settings > system > multitasking > don't show snap beside options.
# settings > system > power&sleep  > always network disconnect on sleep.
# Search up how to "force" uninstall things like Microsoft Solitaire Collection.
# https://www.windowscentral.com/how-disable-password-reveal-button-sign-screen-windows-10




# commands to list things:
# declare -p    variables and function names
# set           like above, but show function bodies
# alias         aliases
# shopt         shell options
# hash          hashed executables from PATH
# bind -p       readline key-bindings
# enable        enabled shell builtins




# disable sending and receiving XON/XOFF
# (only one is actually necessary to do)
stty stop '' -ixoff
stty stop '' -ixon

shopt -s globstar
shopt -s extglob
export FUNCNEST=100
export LINES COLUMNS # for .gitconfig




shopt -s histappend
declare -a histignore=(
    'fg*' 'hist' 'history' 'hash' 'bind' 'clear'
    'inputrc' 'bashrc' 'als' 'alsl' 'vimrc' 'gitconfig'
    'cd\ \.\.*' 'ls' 'lsa' 'clsa' 'lsen\ *'
    'vims' 'todo'
    './build' './main'
    'git\ status' 'git gra' 'git\ graph' 'git\ diff'
    'soundcheck' 'coinflip' 'yes'
)
export HISTIGNORE=
for pattern in "${histignore[@]}"; do
    HISTIGNORE+="$pattern"':'
done
unset histignore
export HISTCONTROL=ignoredups:ignorespace
export HISTSIZE=1024
export HISTFILESIZE=2048




declare -rx INPUTRC="${XGD_CONFIG_HOME}/readline/inputrc"
#declare -rx LESSKEY="${XGD_CONFIG_HOME}/less/lesskey" <- this doesn't work :/
declare -rx     VIM="${XGD_CONFIG_HOME}"
declare -rx VIMINIT='source ${VIM}/vimfiles/vimrc'
declare -rx PYTHONSTARTUP="${XGD_CONFIG_HOME}/python/startup.py"
PYTHONHOME+=":${XGD_CONFIG_HOME}/python/"

source "${XGD_CONFIG_HOME}/npm/completion"

[[ -f "${XGD_CONFIG_HOME}/ansicode/ansicode"   ]] && source "${XGD_CONFIG_HOME}/ansicode/ansicode"
[[ -f "${XGD_CONFIG_HOME}/bash/aliases"        ]] && source "${XGD_CONFIG_HOME}/bash/aliases"
[[ -f "${XGD_CONFIG_HOME}/bash/aliases__local" ]] && source "${XGD_CONFIG_HOME}/bash/aliases__local"
alias   inputrc='"$EDITOR" "${XGD_CONFIG_HOME}/readline/inputrc"'
alias    bashrc='"$EDITOR" "${XGD_CONFIG_HOME}/bash/bashrc"'
alias       als='"$EDITOR" "${XGD_CONFIG_HOME}/bash/aliases"'
alias      alsl='"$EDITOR" "${XGD_CONFIG_HOME}/bash/aliases__local"'
alias     vimrc='"$EDITOR" "${XGD_CONFIG_HOME}/vimfiles/vimrc"'
alias gitconfig='"$EDITOR" "${XGD_CONFIG_HOME}/git/config"'

export EDITOR='vim'
export CSCOPE_EDITOR='view'




# startup the gpg and ssh agent:
# make the gpg-agent cache my password for one hour.
# https://help.github.com/en/github/authenticating-to-github/associating-an-email-with-your-gpg-key
gpg-agent --default-cache-ttl 3600 --daemon #--enable-ssh-support
[[ -z "${SSH_AUTH_SOCK}" ]] && eval "$(ssh-agent -s)"
function ssh-agent() {
    echo 'warning: an ssh agent has already been started.'
    echo 'if you wish to use this executable, prefix with the command builtin.'
    echo 'to kill all ssh-agents, do:'
    echo '  taskkill //F //FI "IMAGENAME eq ssh-agent.exe" //T'
}
readonly -f ssh-agent




# less command behaviour:
# +X : enable startup termcap
# -F : (not used) print to console if 1 page
# -q : medium-quiet
# -R : interpret escape-sequences
# -J : show status-column
# -N : show line numbers (off)
# -M : use long prompt
# -x4: use <4> as tabstop
declare -rx LESS='-+X -qRJM -x4'

# https://github.com/mintty/mintty/issues/170#issuecomment-108889098
# disable mouse-scrolling in mintty for the alternate screen
echo -e '\e[?7786l'

# grep colored output styling:
# https://askubuntu.com/a/1042242
# TODO declare -rx GREP_COLORS=''




# expand variables to their contained values,
# and don't suggest files for these commands:
shopt -s direxpand
complete -d -o bashdefault -- cd ls lsa mkdir
complete -ab -A function -X '{_*,}' -- type

# suggest completions for an empty
# commandline with enabled builtins:
complete -A enabled -E




# finalize prompt:
readonly PS1
declare -rxi PROMPT_DIRTRIM=5
declare -rxi PSLINES="$(echo -e "$PS1" | wc --lines)"




# go to the user's home directory:
if [[ "$PWD" = '/' || "$PWD" = "$HOME" ]]
then home; else clsa; fi

